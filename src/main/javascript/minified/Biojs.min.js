var Biojs=function(){};Biojs.EventHandler=function(a){this.eventType=a;this.listeners=[];this.addListener=function(b){if((typeof b)=="function"){this.listeners.push(b)}};this.removeListener=function(b){if((typeof b)=="function"){var c=Biojs.Utils.indexOf(this.listeners,b);if(c!=-1){this.listeners.splice(c,1)}}};this.triggerEvent=function(b){for(var c in this.listeners){this.listeners[c](b)}}};Biojs.Event=function(b,d,c){this.source=c;this.type=b;for(var a in d){this[a]=d[a]}};Biojs.Utils={clone:function(b){var a=(b instanceof Array)?[]:{};for(i in b){if(b[i]&&typeof b[i]=="object"){a[i]=Biojs.Utils.clone(b[i])}else{a[i]=b[i]}}return a},isEmpty:function(b){if(b instanceof Array){return(b.length<=0)}else{for(var a in b){if(b.hasOwnProperty(a)){return false}}return true}},indexOf:function(d,b,c){var a;if(b){if(indexOf){return indexOf.call(b,d,c)}a=b.length;c=c?c<0?Math.max(0,a+c):c:0;for(;c<a;c++){if(c in b&&b[c]===d){return c}}}return -1},console:{enable:function(){if(window.console){this.log=function(b){console.log(b)}}else{if(window.opera){this.log=function(b){window.opera.postError(b)}}else{var a=window.open("","myconsole","width=350,height=250,menubar=0,toolbar=0,status=0,scrollbars=1,resizable=1");if(a){a.document.writeln('<html><head><title>BioJS Console</title></head><body bgcolor=white onLoad="self.focus()"><div id="Biojs.console"></div></body></html>');a.document.close();Biojs.console.domDocument=a.document;Biojs.console.domDivNode=a.document.getElementById("Biojs.console");this.log=function(d){var c="";if(d instanceof Array){for(b=0;b<d.length;b++){c+="["+b+"]="+d[b]+" "}}else{if(d instanceof String||typeof d==="string"){c=d}else{for(var b in d){c+="["+b+"]="+d[b]+" "}}}textNode=Biojs.console.domDocument.createTextNode(c);line=Biojs.console.domDocument.createElement("pre");line.appendChild(textNode);Biojs.console.domDivNode.appendChild(line)}}else{alert("Please activate the pop-up window in this page in order to enable the BioJS console")}}}},log:function(a){}}};Biojs.extend=function(e,g){var h=Biojs.prototype.extend;Biojs._prototyping=true;var f=new this;if(f.eventTypes instanceof Array){for(var c in f.eventTypes){e.eventTypes.push(f.eventTypes[c])}}if(f.opt instanceof Object){for(var b in f.opt){e.opt[b]=f.opt[b]}}h.call(f,e);f.base=function(){};delete Biojs._prototyping;var d=f.constructor;var a=f.constructor=function(){if(!Biojs._prototyping){if(this.constructor==a){function k(){}k.prototype=f;var j=new k();j.setOptions(arguments[0]);j.setEventHandlers(j.eventTypes);j.biojsObjectId=Biojs.uniqueId();Biojs.addInstance(j);d.apply(j,arguments);return j}else{d.apply(this,arguments)}}};a.ancestor=this;a.extend=this.extend;a.forEach=this.forEach;a.implement=this.implement;a.prototype=f;a.valueOf=function(j){return(j=="object")?a:d.valueOf()};a.toString=this.toString;h.call(a,g);if(typeof a.init=="function"){a.init()}return a};Biojs.prototype={extend:function(b,h){if(arguments.length>1){var e=this[b];if(e&&(typeof h=="function")&&(!e.valueOf||e.valueOf()!=h.valueOf())&&/\bbase\b/.test(h)){var a=h.valueOf();h=function(){var l=this.base||Biojs.prototype.base;this.base=e;var k=a.apply(this,arguments);this.base=l;return k};h.valueOf=function(k){return(k=="object")?h:a};h.toString=Biojs.toString}this[b]=h}else{if(b){var g=Biojs.prototype.extend;if(!Biojs._prototyping&&typeof this!="function"){g=this.extend||g}var d={toSource:null};var f=["constructor","toString","valueOf"];var c=Biojs._prototyping?0:1;while(j=f[c++]){if(b[j]!=d[j]){g.call(this,j,b[j])}}for(var j in b){if(!d[j]){g.call(this,j,b[j])}}}}return this},addListener:function(b,c){if(this._eventHandlers){for(var a in this._eventHandlers){if(b==this._eventHandlers[a].eventType){this._eventHandlers[a].addListener(c);return}}}},removeListener:function(b,c){if(this._eventHandlers){for(var a in this._eventHandlers){if(b==this._eventHandlers[a].eventType){this._eventHandlers[a].removeListener(c);return}}}},setEventHandlers:function(d){this._eventHandlers=[];var b=function(e){return function(f){e.listeners.push(f)}};if(typeof d=="object"){for(var a=0;a<d.length;a++){var c=new Biojs.EventHandler(d[a]);this._eventHandlers.push(c);this[d[a]]=new b(c)}}},raiseEvent:function(b,c){for(var a in this._eventHandlers){if(b==this._eventHandlers[a].eventType){this._eventHandlers[a].triggerEvent(c);return}}},setOptions:function(a){if(this.opt instanceof Object){this.opt=Biojs.Utils.clone(this.opt);for(var b in a){this.opt[b]=a[b]}}},listen:function(c,b,a){if(c instanceof Biojs){if(typeof a=="function"){c.addListener(b,a)}}},getId:function(){return this.biojsObjectId}};Biojs=Biojs.extend({constructor:function(){this.extend(arguments[0])},vaueOf:function(){return"Biojs"}},{ancestor:Object,version:"1.0",forEach:function(a,d,c){for(var b in a){if(this.prototype[b]===undefined){d.call(c,a[b],b,a)}}},implement:function(){for(var a=0;a<arguments.length;a++){if(typeof arguments[a]=="function"){arguments[a](this.prototype)}else{this.prototype.extend(arguments[a])}}return this},toString:function(){return String(this.valueOf())},uniqueId:function(){if(typeof Biojs.prototype.__uniqueid=="undefined"){Biojs.prototype.__uniqueid=0}return Biojs.prototype.__uniqueid++},addInstance:function(a){if(typeof Biojs.prototype.__instances=="undefined"){Biojs.prototype.__instances={}}return Biojs.prototype.__instances[a.biojsObjectId]=a},getInstance:function(a){return Biojs.prototype.__instances[a]},registerGlobal:function(a,b){window[a]=b},getGlobal:function(a){return window[a]},console:Biojs.Utils.console,EventHandler:Biojs.EventHandler,Event:Biojs.Event,Utils:Biojs.Utils});